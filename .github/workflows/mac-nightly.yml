name: Nightly Mac PKG

on:
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch:

jobs:
  macos:
    if: github.repository == 'aurelienpierreeng/ansel' || github.event_name == 'workflow_dispatch'
    name: Nightly Ansel Mac OS build
    runs-on: macos-15  # macos-15-xlarge
    strategy:
      fail-fast: false
      matrix:
        build:
          - { os: macos-15, xcode: 16.0, deployment: 15.0 }
        btype:
          - Release
        compiler:
          - { compiler: XCode, CC: cc, CXX: c++ }
        eco: [-DBINARY_PACKAGE_BUILD=ON]
        target:
          - skiptest
        generator:
          - Ninja
        branch:
          - { code: "${{ github.ref_name }}", label: stable }
    env:
      DEVELOPER_DIR: /Applications/Xcode_${{ matrix.build.xcode }}.app/Contents/Developer
      CC: ${{ matrix.compiler.CC }}
      CXX: ${{ matrix.compiler.CXX }}
      MACOSX_DEPLOYMENT_TARGET: ${{ matrix.build.deployment }}
      SRC_DIR: ${{ github.workspace }}/src
      BUILD_DIR: ${{ github.workspace }}/src/build
      INSTALL_PREFIX: ${{ github.workspace }}/src/build/macosx
      CMAKE_BUILD_TYPE: ${{ matrix.btype }}
      GENERATOR: ${{ matrix.generator }}
      TARGET: ${{ matrix.target }}
      BRANCH: ${{ matrix.branch.code }}
      BUILD_NAME: ${{ matrix.branch.label }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: true
          path: src
      - name: Install Base Dependencies
        run: |
          brew --prefix
          brew update > /dev/null || true
          # brew upgrade || true        # No need for a very time-consuming upgrade of ALL packages
          #brew upgrade gd               # See https://github.com/Homebrew/homebrew-core/issues/141766
          brew tap Homebrew/bundle
          cd src/.ci
          export HOMEBREW_NO_INSTALL_UPGRADE=1
          brew bundle --verbose || true
          # handle keg-only libs
          brew link --force libomp
          brew link --force libsoup@2
          brew link --force icu4c@74
      - name: Update lensfun data
        if: ${{ success() }}
        run: |
          lensfun-update-data
      - name: Build and Install
        if: ${{ success() }}
        run: |
          cmake -E make_directory "${BUILD_DIR}";
          cmake -E make_directory "${INSTALL_PREFIX}";
          ./src/.ci/ci-script.sh;
      - name: Check if it runs
        run: |
          ${INSTALL_PREFIX}/bin/ansel --version || true
          ${INSTALL_PREFIX}/bin/ansel-cli \
                 --width 2048 --height 2048 \
                 --hq true --apply-custom-presets false \
                 "${SRC_DIR}/src/tests/integration/images/mire1.cr2" \
                 "${SRC_DIR}/src/tests/integration/0000-nop/nop.xmp" \
                 output.png \
                 --core --disable-opencl --conf host_memory_limit=8192 \
                 --conf worker_threads=4 -t 4 \
                 --conf plugins/lighttable/export/force_lcms2=FALSE \
                 --conf plugins/lighttable/export/iccintent=0 || true # OpenMP builds crash for most configs
      - name: Build macOS package
        run: |
          ./src/packaging/macosx/make_ansel_package.sh
      - name: Create DMG file
        run: |
          ./src/packaging/macosx/make_ansel_dmg.sh
      - name: Get version info
        run: |
          cd ${{ env.SRC_DIR }}
          echo "VERSION=$(git describe --tags --match release-* | sed 's/^release-//;s/-/+/;s/-/~/;s/rc/~rc/')-$(uname -m)" >> $GITHUB_ENV
      - name: Package upload
        if: ${{ success() }}
        uses: actions/upload-artifact@v3
        with:
          path: ${{ env.BUILD_DIR }}/macosx/ansel-*.dmg
          retention-days: 2

  upload_to_release:
    permissions:
      # We need write permission to update the nightly tag
      contents: write
    runs-on: ubuntu-latest
    needs: [macos]
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
      - name: Update nightly release
        uses: andelf/nightly-release@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: nightly
          prerelease: true
          name: 'Ansel nightly build $$'
          body: |
            Test
          files: |
            artifact/*

